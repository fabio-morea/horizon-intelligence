---
title: "figure2"
format: html
editor: visual
---

```{r}
library(igraph)
library(tidyverse)
source('./code/hi_0_parameters.R')
source('./code/hi_functions.R')

```

```{r}

for(yy in 2016:2029){
    print(yy)
    
    # Load the graph
    g <- read.graph(file = paste0('data/filtered-h/', yy, '.graphml'),
                   format = 'graphml')
    plot(g, vertex.label = NA, 
         vertex.size = sqrt(V(g)$R_strength)*30, 
         vertex.color = V(g)$community, 
         main = paste("Year ", yy))
    
}

```

```{r}
for(yy in 2016:2029) {
    print(yy)
    
    # Load the graph
    g <- read.graph(file = paste0('data/filtered-h/', yy, '.graphml'),
                   format = 'graphml')
    
    # Calculate graph statistics
    num_nodes <- vcount(g)
    num_edges <- ecount(g)
    
    # Set the filename for the jpg image
    filename <- paste0('./figures/2-full network/network_', yy, '.jpg')
    
    # Save the plot as a jpg file
    jpeg(file = filename, width = 800, height = 600)
    
    # Plot the graph
    plot(g, vertex.label = NA, 
         vertex.size = sqrt(V(g)$R_strength) * 30, 
         vertex.color = V(g)$community)
    
    # Add the main title with the year
    title(main = paste("Year", yy))
    
    # Add the second line (subtitle) with number of nodes and edges
    mtext(paste("Nodes:", num_nodes, "| Edges:", num_edges),
          side = 3, line = 0.5, cex = 0.8)
    
    # Close the jpg device
    dev.off()
}


```

```{r}
perc_tech 
(1-perc_tech) |> barplot()
```

# 3 networks

```{r}
# complete
yy = 2024

g <- read.graph(file = paste0('data/filtered-h/',yy,'.graphml'),format = 'graphml') 
print(paste("G: ", mean(E(g)$tech), "vertices: ", vcount(g), "edges: ", ecount(g)))

g <- delete_edges(g,  E(g)[E(g)$tech == FALSE] )

g_market <- delete_edges(g,  E(g)[E(g)$tech == TRUE] )

g <- igraph::simplify(g, edge.attr.comb = "sum")
print(paste("G: ", mean(E(g)$tech), "vertices: ", vcount(g), "edges: ", ecount(g)))

#png(paste0('./figures/2-full network/',yy,'.png'))

par(mar=c(0,0,0,0))
plot(g, vertex.label = NA, 
     vertex.size = sqrt(V(g)$R_strength) *50,
     vertex.color = V(g)$community,
     layout = layout_with_graphopt(g), 
     #main = yy, 
     asp = 1.0)
#dev.off()

```

```{r}
# complete
yy = 2024

g <- read.graph(file = paste0('data/filtered-h/',yy,'.graphml'),format = 'graphml') 
print(paste("G: ", mean(E(g)$tech), "vertices: ", vcount(g), "edges: ", ecount(g)))
# V(g)$R_strength<-round(V(g)$R_strength,5)
# g <- delete_vertices(g, V(g)[V(g)$R_strength ==0])

g <- delete_edges(g,  E(g)[E(g)$tech == TRUE] )
g <- delete_vertices(g, V(g)[degree(g) ==0]) 
g <- igraph::simplify(g, edge.attr.comb = "sum")
print(paste("G: ", mean(E(g)$tech), "vertices: ", vcount(g), "edges: ", ecount(g)))

#png(paste0('./figures/2-full network/',yy,'.png'))

par(mar=c(0,0,0,0))
plot(g, vertex.label = NA, 
     vertex.size = sqrt(V(g)$R_strength) *30,
     vertex.color = V(g)$community,
     layout = layout_with_graphopt(g), 
     #main = yy, 
     asp = 1)
#dev.off()

```

```{r}
print("hello")
```
